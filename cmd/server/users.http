@baseUrl = http://localhost:8080/api
@name = "afnf"
@email = "hff@email.com"
@password = "aff"
@userToFollow = Danilo
@token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MzY2MzM5NTYsInN1YiI6IjIyNGZjMmIzLWFlOGMtNDQyMS05ZmEwLTcyY2FkNWVkYjA4OCJ9.VegA_9j5ENBz-gGwoj5E8a-R7QNo37I2gnp9qMgLRaU


### Create a new user
POST {{baseUrl}}/users HTTP/1.1
Content-Type: application/json

{
  "user":{
    "username": {{name}},
    "email": {{email}},
    "password": {{password}}
  }
}


### Login to receive the token
# @name jwt_login
POST {{baseUrl}}/users/login HTTP/1.1
Content-Type: application/json

{
  "user":{
    "email": {{email}},
    "password": {{password}}
  }
}

###
#if RestClient from VSCode
#@token = {{jwt_login.response.body.access_token}}

### Get All Users
GET {{baseUrl}}/user/all
Authorization: Bearer {{token}}

### Get Current User
GET {{baseUrl}}/user HTTP/1.1
Authorization: Bearer {{token}}

### Edit an user
PUT {{baseUrl}}/user HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "user":{
    "email": {{email}},
    "username": "nelosoro",
    "Bio": "I am a software engineer"
  }
}

###
GET {{baseUrl}}/profiles/{{userToFollow}}
Authorization: Bearer {{token}}

### Follow a user
POST {{baseUrl}}/profiles/{{userToFollow}}/follow
Authorization: Bearer {{token}}

### UNfollow a user
DELETE {{baseUrl}}/profiles/{{userToFollow}}/follow
Authorization: Bearer {{token}}

### Create a new article
POST {{baseUrl}}/articles HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "article": {
    "title": "3ej Tjtle 9",
    "description": "Ever wonder how?",
    "body": "You have to believe",
    "tag_list": ["aff", "node", "dragons"]
  }
}

### Get all articles
GET {{baseUrl}}/articles HTTP/1.1
Authorization: Bearer {{token}}

### Feed articles

@limit = 10
@offset = 0

### Feed articles
GET {{baseUrl}}/articles/feed?limit={{limit}}&offset={{offset}} HTTP/1.1
Authorization: Bearer {{token}}

###

#@slug = 3ew-title-9
#@slug = new-title-2
#@slug = new-title-9
@slug = 3ej-tjtle-9

### Get Article by slug
GET {{baseUrl}}/articles/{{slug}} HTTP/1.1
Authorization: Bearer {{token}}

### Update Article by slug
PUT {{baseUrl}}/articles/{{slug}} HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "article": {
    "slug": "slug de teste",
    "body": "novo body",
    "title": "my brand new title"
  }
}

###
